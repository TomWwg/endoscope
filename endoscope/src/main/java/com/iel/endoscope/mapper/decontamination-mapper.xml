<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iel.endoscope.dao.DecontaminationDAO">
    <resultMap id="BaseResultMap" type="com.iel.endoscope.entity.Decontamination">
        <id column="decontamination_id" property="decontaminationId" jdbcType="BIGINT"/>
        <result column="hospital_id" property="hospitalId" jdbcType="BIGINT"/>
        <result column="station_id" property="stationId" jdbcType="BIGINT"/>
        <result column="employee_id" property="employeeId" jdbcType="BIGINT"/>
        <result column="endoscope_id" property="endoscopeId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="consume_time" property="consumeTime" jdbcType="VARCHAR"/>
        <result column="audit_result" property="auditResult" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="BaseResultMap2" type="com.iel.endoscope.entity.DecontaminationWork">
        <result column="employeeNumber" property="employeeNumber" jdbcType="BIGINT"/>
        <result column="employeeName" property="employeeName" jdbcType="BIGINT"/>
        <result column="roleName" property="roleName" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="BaseResultMap3" type="com.iel.endoscope.entity.DecontaminationLog">
        <result column="decontaminationId" property="decontaminationId" jdbcType="BIGINT"/>
        <result column="endoscopeName" property="endoscopeName" jdbcType="VARCHAR"/>
        <result column="endoscopeNumber" property="endoscopeNumber" jdbcType="VARCHAR"/>
        <result column="employeeName" property="employeeName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="consumeTime" property="consumeTime" jdbcType="VARCHAR"/>
        <result column="auditResult" property="auditResult" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="SELECT_All_Column">
        SELECT decontamination_id, hospital_id, station_id, employee_id, endoscope_id, 
        create_time, update_time, consume_time, audit_result
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.iel.endoscope.entity.Decontamination">
        SELECT *
        FROM decontamination
        WHERE decontamination_id = #{decontaminationId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.iel.endoscope.entity.Decontamination">
        DELETE FROM decontamination
        WHERE decontamination_id = #{decontaminationId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.iel.endoscope.entity.Decontamination">
        INSERT INTO decontamination ( hospital_id, 
          station_id, employee_id, endoscope_id, 
          create_time, update_time, consume_time, 
          audit_result )
        VALUES ( #{hospitalId,jdbcType=BIGINT}, 
          #{stationId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{endoscopeId,jdbcType=BIGINT}, 
          #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{consumeTime,jdbcType=VARCHAR},
          #{auditResult,jdbcType=VARCHAR} )
        <selectKey keyProperty="decontaminationId" resultType="long">
            SELECT LAST_INSERT_ID() AS decontaminationId
        </selectKey>
    </insert>
    <insert id="insertSelective" parameterType="com.iel.endoscope.entity.Decontamination">
        INSERT INTO decontamination
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="hospitalId != null">
                hospital_id,
            </if>
            <if test="stationId != null">
                station_id,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="endoscopeId != null">
                endoscope_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="consumeTime != null">
                consume_time,
            </if>
            <if test="auditResult != null">
                audit_result,
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="hospitalId != null">
                #{hospitalId,jdbcType=BIGINT},
            </if>
            <if test="stationId != null">
                #{stationId,jdbcType=BIGINT},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="endoscopeId != null">
                #{endoscopeId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumeTime != null">
                #{consumeTime,jdbcType=VARCHAR},
            </if>
            <if test="auditResult != null">
                #{auditResult,jdbcType=VARCHAR},
            </if>
        </trim>
        <selectKey keyProperty="decontaminationId" resultType="long">
            SELECT LAST_INSERT_ID() AS decontaminationId
        </selectKey>
    </insert>
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO decontamination ( hospital_id, 
          station_id, employee_id, endoscope_id, 
          create_time, update_time, consume_time, 
          audit_result )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.hospitalId,jdbcType=BIGINT}, 
            #{item.stationId,jdbcType=BIGINT}, #{item.employeeId,jdbcType=BIGINT}, #{item.endoscopeId,jdbcType=BIGINT}, 
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.consumeTime,jdbcType=VARCHAR},
            #{item.auditResult,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.iel.endoscope.entity.Decontamination">
        UPDATE decontamination
        <set>
            <if test="hospitalId != null">
                hospital_id = #{hospitalId,jdbcType=BIGINT},
            </if>
            <if test="stationId != null">
                station_id = #{stationId,jdbcType=BIGINT},
            </if>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="endoscopeId != null">
                endoscope_id = #{endoscopeId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumeTime != null">
                consume_time = #{consumeTime,jdbcType=VARCHAR},
            </if>
            <if test="auditResult != null">
                audit_result = #{auditResult,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE decontamination_id = #{decontaminationId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.iel.endoscope.entity.Decontamination">
        UPDATE decontamination
        SET hospital_id = #{hospitalId,jdbcType=BIGINT},
            station_id = #{stationId,jdbcType=BIGINT},
            employee_id = #{employeeId,jdbcType=BIGINT},
            endoscope_id = #{endoscopeId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            consume_time = #{consumeTime,jdbcType=VARCHAR},
            audit_result = #{auditResult,jdbcType=VARCHAR}
        WHERE decontamination_id = #{decontaminationId,jdbcType=BIGINT}
    </update>
    <select id="findDecontaminationsNoResult" resultMap="BaseResultMap">
        SELECT *
        FROM decontamination
        WHERE audit_result IS NULL
    </select>
    <select id="findWorkloadStatistics" parameterType="map" resultMap="BaseResultMap2">
        SELECT e.employee_number employeeNumber, e.employee_name employeeName, r.role_name roleName
        FROM decontamination d, employee e, role r
        <where>
            d.employee_id = e.employee_id
            AND e.role_id = r.role_id
            <if test="employeeNumber != null">
                AND e.employee_number LIKE CONCAT('%',#{employeeNumber,jdbcType=VARCHAR},'%')
            </if>
            <if test="employeeName != null">
                AND e.employee_name LIKE CONCAT('%',#{employeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="roleId != null">
                AND e.role_id = #{roleId,jdbcType=BIGINT}
            </if>
            <if test="startTime != null and endTime != null">
                AND #{startTime,jdbcType=TIMESTAMP} &lt; d.create_time &lt; #{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
    <select id="findDecontaminationLog" resultMap="BaseResultMap3" parameterType="java.util.Map">
        SELECT d.decontamination_id decontaminationId,
        en.endoscope_name endoscopeName,
        en.endoscope_number endoscopeNumber,
        em.employee_name employeeName,
        d.create_time createTime,
        d.update_time updateTime,
        d.consume_time consumeTime,
        d.audit_result auditResult
        FROM decontamination d,
        endoscope en,
        employee em
        <where>
            d.endoscope_id = en.endoscope_id
            AND d.employee_id = em.employee_id
            <if test="endoscopeNumber != null">
                AND en.endoscope_number LIKE CONCAT('%',#{endoscopeNumber,jdbcType=VARCHAR},'%')
            </if>
            <if test="endoscopeName != null">
                AND en.endoscope_name LIKE CONCAT('%', #{endoscopeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="endoscopeType != null">
                AND en.endoscope_type LIKE CONCAT('%', #{endoscopeType,jdbcType=VARCHAR},'%')
            </if>
            <if test="employeeName != null">
                AND em.employee_name LIKE CONCAT('%', #{employeeName,jdbcType=VARCHAR},'%')
            </if>
            <if test="auditResult != null">
                AND d.audit_result = #{auditResult,jdbcType=VARCHAR}
            </if>
            AND #{startTime,jdbcType=TIMESTAMP} &lt; d.create_time &lt; #{endTime,jdbcType=TIMESTAMP}
        </where>
    </select>
    <select id="findDecontaminationLogByEndoscopeId" resultMap="BaseResultMap3" parameterType="java.lang.Long">
        SELECT d.decontamination_id decontaminationId,
               d.create_time createTime,
               d.update_time updateTime,
               d.audit_result auditResult
        FROM decontamination d,
             endoscope en
        WHERE d.endoscope_id = en.endoscope_id
        AND en.endoscope_id = #{endoscopeId,jdbcType=BIGINT}
    </select>
    <select id="findDecontaminationLogByAuditResult" resultMap="BaseResultMap3" parameterType="java.lang.String">
        SELECT d.decontamination_id decontaminationId,
               d.create_time createTime,
               d.update_time updateTime,
               d.audit_result auditResult
        FROM decontamination d,
             endoscope en
        WHERE d.endoscope_id = en.endoscope_id
        AND d.audit_result = #{auditResult,jdbcType=VARCHAR}
    </select>
    <insert id="insertDecontaminationSelective" parameterType="com.iel.endoscope.entity.Decontamination" useGeneratedKeys="true" keyProperty="decontaminationId" keyColumn="decontamination_id">
        INSERT INTO decontamination
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="hospitalId != null">
                hospital_id,
            </if>
            <if test="stationId != null">
                station_id,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="endoscopeId != null">
                endoscope_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="consumeTime != null">
                consume_time,
            </if>
            <if test="auditResult != null">
                audit_result,
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffixOverrides="," suffix=")">
            <if test="hospitalId != null">
                #{hospitalId,jdbcType=BIGINT},
            </if>
            <if test="stationId != null">
                #{stationId,jdbcType=BIGINT},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="endoscopeId != null">
                #{endoscopeId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="consumeTime != null">
                #{consumeTime,jdbcType=VARCHAR},
            </if>
            <if test="auditResult != null">
                #{auditResult,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
</mapper>